{"version":3,"sources":["components/Appbar/index.tsx","configs/routes.ts","components/Footer/index.tsx","domains/Todo.ts","components/Warning/index.tsx","pages/NotFound/index.tsx","configs/endpoints.ts","services/axiosInstance.ts","services/requestService.ts","services/todoService.ts","hooks/useTodo.ts","components/DateLabel/index.tsx","helpers/date.ts","components/StatusFlag/index.tsx","components/TodoCard/index.tsx","components/TodoCard/TodoCardSkeleton.tsx","pages/TodoDetail/index.tsx","components/TodoCardSection/index.tsx","components/TodoInput/index.tsx","pages/Welcome/index.tsx","components/Router/Router.tsx","hooks/useRoute.ts","components/Wrapper/index.tsx","App.tsx","index.tsx"],"names":["HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Routes","Appbar","history","useHistory","Toolbar","IconButton","size","edge","color","sx","mr","Menu","Typography","onClick","push","variant","component","className","flexGrow","AccountCircle","Footer","TodoStatus","Warning","icon","message","NotFound","Link","Endpoints","axiosInstance","axios","create","baseURL","RequestService","url","get","data","post","put","delete","fetchTodo","TODO","then","respnse","createTodo","todo","CREATE_TODO","updateTodo","todoId","id","toString","DELETE_TODO","replace","deleteTodo","useTodo","queryClient","useQueryClient","params","useParams","useQuery","fetchTodoService","enabled","todoList","isLoadingTodoList","isLoading","FIND_TODO","findTodoService","useMutation","createTodoService","onSuccess","invalidateQueries","mutate","removeTodo","deleteTodoService","updateTodoService","DateLabel","label","date","distanceDate","useMemo","formatDistanceToNow","Date","addSuffix","distanceSiceNow","StatusFlag","isPending","Chip","TodoCard","type","status","PENDING","toggleTodoStatus","useCallback","COMPLETED","handleRemove","handleUpdate","newStatus","newTodo","SmallCard","Checkbox","defaultChecked","Tooltip","title","Button","to","style","textDecoration","LargeCard","CardMedia","alt","height","image","CardContent","Stack","justifyContent","alignItems","createdAt","updatedAt","marginTop","description","CardActions","Card","Skeleton","map","i","width","animation","TodoDetail","goBack","fontSize","TodoCardSection","TransitionGroup","Collapse","TodoInput","useState","setTitle","hasTitleError","setHasTitleError","setDescription","hasDescriptionError","setHasDescriptionError","handleChangeTitle","event","newTitle","value","length","handleChangeDescription","newDescription","handleSubmit","preventDefault","onSubmit","TextField","error","helperText","placeholder","onChange","disabled","Welcome","Router","routes","key","ROOT","Component","TODO_DETAIL","NOT_FOUND","route","path","exact","Wrapper","App","basename","process","QueryClient","ReactDOM","render","client","document","getElementById"],"mappings":"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","file":"static/js/main.c4b995c1.chunk.js","sourcesContent":["import {\n  AppBar as AppbarMUI,\n  IconButton,\n  Slide,\n  Toolbar,\n  Typography,\n  useScrollTrigger,\n} from \"@mui/material\";\n\nimport { AccountCircle, Menu } from \"@mui/icons-material\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Appbar.scss\";\n\ninterface HideOnScrollProps {\n  window?: () => Window;\n  children: React.ReactElement;\n}\n\nfunction HideOnScroll(props: HideOnScrollProps) {\n  const { children, window } = props;\n\n  const trigger = useScrollTrigger({\n    target: window ? window() : undefined,\n  });\n\n  return (\n    <Slide appear={false} direction=\"down\" in={!trigger}>\n      {children}\n    </Slide>\n  );\n}\n\nconst Appbar = () => {\n  const history = useHistory();\n\n  const handleClick = () => history.push(`/`);\n\n  return (\n    <>\n      <HideOnScroll>\n        <AppbarMUI>\n          <Toolbar>\n            <IconButton\n              size=\"large\"\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"menu\"\n              sx={{ mr: 2 }}\n            >\n              <Menu />\n            </IconButton>\n\n            <Typography\n              onClick={handleClick}\n              variant=\"h6\"\n              component=\"a\"\n              className=\"header-link\"\n              sx={{ flexGrow: 1 }}\n            >\n              Todo List\n            </Typography>\n\n            <IconButton size=\"large\" color=\"inherit\">\n              <AccountCircle />\n            </IconButton>\n          </Toolbar>\n        </AppbarMUI>\n      </HideOnScroll>\n      <Toolbar />\n    </>\n  );\n};\n\nexport default Appbar;\n","export enum Routes {\n  ROOT = \"/\",\n  TODO_DETAIL = \"/todo/:id\",\n  NOT_FOUND = \"*\",\n}\n","import { Toolbar, Typography } from \"@mui/material\";\nimport \"./Footer.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Toolbar>\n        <Typography variant=\"body1\" color=\"white\">\n          © 2021 Todo List\n        </Typography>\n      </Toolbar>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export enum TodoStatus {\n  PENDING = \"PENDING\",\n  COMPLETED = \"COMPLETED\",\n}\n\nexport interface Todo {\n  createdAt: Date;\n  description: string;\n  id: number;\n  status: TodoStatus;\n  title: string;\n  updatedAt: Date;\n}\n","import { Typography } from \"@mui/material\";\n\nimport \"./Warning.scss\";\n\ninterface WarningProps {\n  icon: JSX.Element;\n  message: string;\n}\nconst Warning = (props: WarningProps) => {\n  const { icon, message } = props;\n\n  return (\n    <div className=\"empty-container\">\n      {icon}\n      <Typography variant=\"h5\" component=\"h5\">\n        {message}\n      </Typography>\n    </div>\n  );\n};\nexport default Warning;\n","import SentimentVeryDissatisfiedIcon from \"@mui/icons-material/SentimentVeryDissatisfied\";\nimport { Link } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\nimport Warning from \"src/components/Warning\";\n\nimport \"./NotFound.scss\";\n\nconst NotFound = () => {\n  const history = useHistory();\n\n  const handleClick = () => history.push(\"/\");\n\n  return (\n    <div className=\"not-found-container\">\n      <Warning\n        icon={<SentimentVeryDissatisfiedIcon />}\n        message=\"Page not found\"\n      />\n      <Link onClick={handleClick}>Go to main page</Link>\n    </div>\n  );\n};\n\nexport default NotFound;\n","export enum Endpoints {\n  TODO = \"/todo\",\n  FIND_TODO = \"/todo/{id}\",\n  CREATE_TODO = \"/todo\",\n  UPDATE_TODO = \"/todo/{id}\",\n  DELETE_TODO = \"/todo/{id}\",\n}\n","import axios from \"axios\";\n\nconst baseURL = \"http://localhost:3001\";\n\nconst axiosInstance = axios.create({ baseURL });\n\nexport default axiosInstance;\n","import { AxiosResponse } from \"axios\";\nimport axiosInstance from \"./axiosInstance\";\n\nexport interface Response<T> extends AxiosResponse<T> {}\n\nclass RequestService {\n  public static get<T>(url: string): Promise<Response<T>> {\n    return axiosInstance.get<T, Response<T>>(url);\n  }\n\n  public static post<T>(url: string, data?: unknown): Promise<Response<T>> {\n    return axiosInstance.post<T, Response<T>>(url, data);\n  }\n\n  public static put<T>(url: string, data?: unknown): Promise<Response<T>> {\n    return axiosInstance.put<T, Response<T>>(url, data);\n  }\n\n  public static delete<T>(url: string): Promise<Response<T>> {\n    return axiosInstance.delete<T, Response<T>>(url);\n  }\n}\n\nexport default RequestService;\n","import { Endpoints } from \"src/configs/endpoints\";\nimport { Todo } from \"src/domains/Todo\";\nimport RequestService from \"./requestService\";\n\nexport const fetchTodo = (): Promise<Todo[]> => {\n  return RequestService.get<Todo[]>(Endpoints.TODO).then((respnse) => {\n    return respnse.data;\n  });\n};\n\nexport const findTodo = (todoId: string): Promise<Todo> => {\n  const url = Endpoints.FIND_TODO.replace(\"{id}\", todoId);\n\n  return RequestService.get<Todo>(url).then((respnse) => {\n    return respnse.data;\n  });\n};\n\nexport const createTodo = (todo: Partial<Todo>): Promise<Todo> => {\n  return RequestService.post<Todo>(Endpoints.CREATE_TODO, todo).then(\n    (respnse) => respnse.data\n  );\n};\n\nexport const updateTodo = (todo: Todo): Promise<Todo> => {\n  const todoId = todo.id.toString();\n  const url = Endpoints.DELETE_TODO.replace(\"{id}\", todoId);\n\n  return RequestService.put<Todo>(url, todo).then((respnse) => respnse.data);\n};\n\nexport const deleteTodo = (todo: Todo): Promise<Todo> => {\n  const todoId = todo.id.toString();\n  const url = Endpoints.DELETE_TODO.replace(\"{id}\", todoId);\n\n  return RequestService.delete<Todo>(url).then((respnse) => respnse.data);\n};\n","import { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { useParams } from \"react-router\";\nimport {\n  createTodo as createTodoService,\n  deleteTodo as deleteTodoService,\n  fetchTodo as fetchTodoService,\n  findTodo as findTodoService,\n  updateTodo as updateTodoService,\n} from \"src/services/todoService\";\n\nexport const useTodo = () => {\n  const queryClient = useQueryClient();\n  const params: { id?: string } = useParams();\n\n  const { data: todoList, isLoading: isLoadingTodoList } = useQuery(\n    \"todoList\",\n    fetchTodoService,\n    {\n      enabled: !params.id,\n    }\n  );\n\n  const { data: todo, isLoading: isLoadingTodo } = useQuery(\n    \"todo\",\n    () => findTodoService(params.id as string),\n    {\n      enabled: !!params.id,\n    }\n  );\n\n  const { mutate: createTodo } = useMutation(createTodoService, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"todoList\");\n      queryClient.invalidateQueries(\"todo\");\n    },\n  });\n\n  const { mutate: removeTodo } = useMutation(deleteTodoService, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"todoList\");\n      queryClient.invalidateQueries(\"todo\");\n    },\n  });\n\n  const { mutate: updateTodo } = useMutation(updateTodoService, {\n    onSuccess: () => {\n      queryClient.invalidateQueries(\"todoList\");\n      queryClient.invalidateQueries(\"todo\");\n    },\n  });\n\n  return {\n    todo,\n    isLoading: isLoadingTodo || isLoadingTodoList,\n    todoList,\n    createTodo,\n    removeTodo,\n    updateTodo,\n  };\n};\n","import { Typography } from \"@mui/material\";\nimport { useMemo } from \"react\";\nimport { distanceSiceNow } from \"src/helpers/date\";\n\ninterface DateLabelProps {\n  label: string;\n  date: Date;\n}\n\nconst DateLabel = (props: DateLabelProps) => {\n  const { label, date } = props;\n\n  const distanceDate = useMemo(() => distanceSiceNow(date), [date]);\n\n  return (\n    <Typography variant=\"caption\" color=\"text.secondary\">\n      {label}&nbsp;\n      {distanceDate}\n    </Typography>\n  );\n};\n\nexport default DateLabel;\n","import { formatDistanceToNow } from \"date-fns\";\n\nexport const distanceSiceNow = (date: Date) =>\n  formatDistanceToNow(new Date(date), {\n    addSuffix: true,\n  });\n","import { Chip } from \"@mui/material\";\n\nimport DoneIcon from \"@mui/icons-material/Done\";\nimport AccessTimeIcon from \"@mui/icons-material/AccessTime\";\n\ninterface StatusFlagProps {\n  isPending: boolean;\n}\n\nconst StatusFlag = ({ isPending }: StatusFlagProps) => {\n  if (isPending) {\n    return (\n      <Chip\n        icon={<AccessTimeIcon />}\n        label=\"Pending\"\n        color=\"warning\"\n        variant=\"outlined\"\n      />\n    );\n  }\n\n  return (\n    <Chip\n      icon={<DoneIcon />}\n      label=\"Completed\"\n      color=\"success\"\n      variant=\"outlined\"\n    />\n  );\n};\n\nexport default StatusFlag;\n","import DeleteIcon from \"@mui/icons-material/Delete\";\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Checkbox,\n  Stack,\n  Tooltip,\n  Typography,\n} from \"@mui/material\";\nimport { useCallback, useMemo } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Todo, TodoStatus } from \"src/domains/Todo\";\nimport { useTodo } from \"src/hooks/useTodo\";\nimport DateLabel from \"../DateLabel\";\nimport StatusFlag from \"../StatusFlag\";\n\nimport \"./TodoCard.scss\";\nimport TodoCardSkeleton from \"./TodoCardSkeleton\";\n\ninterface TodoCardProps {\n  todo: Todo;\n  type?: \"small\" | \"large\";\n}\n\nconst TodoCard = ({ todo, type = \"small\" }: TodoCardProps) => {\n  const { removeTodo, updateTodo } = useTodo();\n\n  const isPending = useMemo(\n    () => todo.status === TodoStatus.PENDING,\n    [todo.status]\n  );\n\n  const toggleTodoStatus = useCallback(\n    () => (isPending ? TodoStatus.COMPLETED : TodoStatus.PENDING),\n    [isPending]\n  );\n\n  const handleRemove = useCallback(() => removeTodo(todo), [removeTodo, todo]);\n\n  const handleUpdate = useCallback(() => {\n    const newStatus = toggleTodoStatus();\n\n    const newTodo: Todo = { ...todo, status: newStatus };\n\n    updateTodo(newTodo);\n  }, [todo, toggleTodoStatus, updateTodo]);\n\n  const SmallCard = () => (\n    <div className=\"card-content\">\n      <Checkbox defaultChecked={!isPending} onClick={handleUpdate} />\n      <Tooltip title=\"See details\">\n        <Button\n          component={Link}\n          to={`/todo/${todo.id}`}\n          className=\"card-link\"\n          color=\"primary\"\n        >\n          <p\n            className=\"label\"\n            style={{ textDecoration: isPending ? \"none\" : \"line-through\" }}\n          >\n            {todo.title}\n          </p>\n        </Button>\n      </Tooltip>\n\n      <Tooltip title=\"Delete\">\n        <Button color=\"error\" onClick={handleRemove}>\n          <DeleteIcon />\n        </Button>\n      </Tooltip>\n    </div>\n  );\n\n  const LargeCard = () => (\n    <>\n      <CardMedia\n        component=\"img\"\n        alt=\"todo list\"\n        height=\"200\"\n        image=\"https://images.pexels.com/photos/1226398/pexels-photo-1226398.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\"\n      />\n      <CardContent>\n        <Stack direction=\"row\" justifyContent=\"space-between\">\n          <Stack direction=\"row\" alignItems=\"flex-end\">\n            <Typography\n              variant=\"h5\"\n              component=\"div\"\n              sx={{ textDecoration: isPending ? \"none\" : \"line-through\" }}\n            >\n              {todo.title}\n            </Typography>\n          </Stack>\n\n          <StatusFlag isPending={isPending} />\n        </Stack>\n\n        <Stack>\n          <DateLabel label=\"Created\" date={todo.createdAt} />\n          <DateLabel label=\"Updated\" date={todo.updatedAt} />\n        </Stack>\n\n        <Typography variant=\"h6\" color=\"text.secondary\" sx={{ marginTop: 3 }}>\n          {todo.description}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\" onClick={handleRemove}>\n          Delete Todo\n        </Button>\n        <Button size=\"small\" onClick={handleUpdate}>\n          {isPending ? \"Complete Todo\" : \"Uncomplete Todo\"}\n        </Button>\n      </CardActions>\n    </>\n  );\n\n  return (\n    <Card className=\"card\">\n      {type === \"small\" ? <SmallCard /> : <LargeCard />}\n    </Card>\n  );\n};\n\nTodoCard.Skeleton = TodoCardSkeleton;\n\nexport default TodoCard;\n","import { Card, Skeleton } from \"@mui/material\";\nimport \"./TodoCard.scss\";\n\ninterface TodoCardSkeletonProps {\n  type?: \"small\" | \"large\";\n}\n\nconst TodoCardSkeleton = ({ type = \"small\" }: TodoCardSkeletonProps) => {\n  return (\n    <>\n      {[1]?.map((i) => (\n        <Card className=\"card\">\n          <div\n            style={{\n              width: \"100%\",\n              height: type === \"small\" ? \"64px\" : \"406px\",\n            }}\n          >\n            <Skeleton\n              animation=\"wave\"\n              sx={{ width: \"100%\", height: \"100%\" }}\n              variant=\"rectangular\"\n            />\n          </div>\n        </Card>\n      ))}\n    </>\n  );\n};\n\nexport default TodoCardSkeleton;\n","import { Typography } from \"@mui/material\";\nimport { useHistory } from \"react-router-dom\";\n\nimport ArrowBackIosNewIcon from \"@mui/icons-material/ArrowBackIosNew\";\nimport TodoCard from \"src/components/TodoCard\";\nimport ErrorOutlineIcon from \"@mui/icons-material/ErrorOutline\";\n\nimport \"./TodoDetail.scss\";\nimport Warning from \"src/components/Warning\";\nimport { useTodo } from \"src/hooks/useTodo\";\n\nconst TodoDetail = () => {\n  const history = useHistory();\n  const { todo, isLoading } = useTodo();\n\n  const handleClick = () => history.goBack();\n\n  if (isLoading) return <TodoCard.Skeleton type=\"large\" />;\n\n  return (\n    <>\n      <Typography\n        variant=\"h5\"\n        component=\"a\"\n        onClick={handleClick}\n        className=\"back-link\"\n        sx={{ flexGrow: 1 }}\n      >\n        <ArrowBackIosNewIcon sx={{ fontSize: 20 }} />\n        Go back\n      </Typography>\n\n      {todo ? (\n        <TodoCard todo={todo} type=\"large\" />\n      ) : (\n        <Warning icon={<ErrorOutlineIcon />} message=\"No data found\" />\n      )}\n    </>\n  );\n};\n\nexport default TodoDetail;\n","import { Collapse } from \"@mui/material\";\nimport TodoCard from \"../TodoCard\";\nimport { TransitionGroup } from \"react-transition-group\";\nimport { useTodo } from \"src/hooks/useTodo\";\n\nconst TodoCardSection = () => {\n  const { todoList, isLoading } = useTodo();\n\n  if (isLoading) return <TodoCard.Skeleton />;\n\n  return (\n    <TransitionGroup>\n      {todoList?.map((todo) => (\n        <Collapse key={todo.id}>\n          <TodoCard todo={todo} />\n        </Collapse>\n      ))}\n    </TransitionGroup>\n  );\n};\n\nexport default TodoCardSection;\n","import { Button, TextField } from \"@mui/material\";\nimport { ChangeEvent, SyntheticEvent, useCallback, useState } from \"react\";\nimport { Todo } from \"src/domains/Todo\";\nimport { useTodo } from \"src/hooks/useTodo\";\nimport \"./TodoInput.scss\";\n\nconst TodoInput = () => {\n  const { createTodo } = useTodo();\n  const [title, setTitle] = useState<string>();\n  const [hasTitleError, setHasTitleError] = useState<boolean>(false);\n  const [description, setDescription] = useState<string>();\n  const [hasDescriptionError, setHasDescriptionError] =\n    useState<boolean>(false);\n\n  const handleChangeTitle = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const newTitle = event.target.value;\n\n      setHasTitleError(newTitle.length < 3);\n      setTitle(newTitle);\n    },\n    []\n  );\n\n  const handleChangeDescription = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const newDescription = event.target.value;\n\n      setHasDescriptionError(newDescription.length < 3);\n      setDescription(newDescription);\n    },\n    []\n  );\n\n  const handleSubmit = useCallback(\n    (event: SyntheticEvent) => {\n      event.preventDefault();\n\n      if (!title || !description) return;\n\n      const newTodo: Partial<Todo> = { title, description };\n\n      setTitle(undefined);\n      setDescription(undefined);\n\n      createTodo(newTodo);\n    },\n    [createTodo, description, title]\n  );\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <TextField\n        className=\"text-field\"\n        variant=\"standard\"\n        value={title ?? \"\"}\n        error={hasTitleError}\n        helperText={hasTitleError && \"Title must have more than 3 characters\"}\n        placeholder=\"Today I have to...\"\n        onChange={handleChangeTitle}\n      />\n      <TextField\n        className=\"text-field\"\n        variant=\"standard\"\n        value={description ?? \"\"}\n        error={hasDescriptionError}\n        helperText={\n          hasDescriptionError && \"Descrition must have more than 3 characters\"\n        }\n        placeholder=\"Description\"\n        onChange={handleChangeDescription}\n      />\n      <Button\n        className=\"button\"\n        variant=\"contained\"\n        type=\"submit\"\n        value=\"Submit\"\n        disabled={\n          !title || !description || hasTitleError || hasDescriptionError\n        }\n      >\n        Add\n      </Button>\n    </form>\n  );\n};\n\nexport default TodoInput;\n","import TodoCardSection from \"src/components/TodoCardSection\";\nimport TodoInput from \"src/components/TodoInput\";\n\nconst Welcome = () => {\n  return (\n    <>\n      <TodoInput />\n      <TodoCardSection />\n    </>\n  );\n};\n\nexport default Welcome;\n","import { Route, Switch } from \"react-router\";\nimport { useRoute } from \"src/hooks/useRoute\";\n\nconst Router = () => {\n  const { routes } = useRoute();\n\n  return (\n    <Switch>\n      {routes.map((route) => {\n        const { Component, url, key } = route;\n        return (\n          <Route key={key} path={url} exact>\n            <Component />\n          </Route>\n        );\n      })}\n    </Switch>\n  );\n};\n\nexport default Router;\n","import { Routes } from \"src/configs/routes\";\nimport NotFound from \"src/pages/NotFound\";\nimport TodoDetail from \"src/pages/TodoDetail\";\nimport Welcome from \"src/pages/Welcome\";\n\ninterface Route {\n  key: string;\n  url: string;\n  Component: () => JSX.Element;\n}\n\nexport const useRoute = () => {\n  const routes: Route[] = [\n    {\n      key: \"welcome\",\n      url: Routes.ROOT,\n      Component: Welcome,\n    },\n    {\n      key: \"todoDetail\",\n      url: Routes.TODO_DETAIL,\n      Component: TodoDetail,\n    },\n    {\n      key: \"notFound\",\n      url: Routes.NOT_FOUND,\n      Component: NotFound,\n    },\n  ];\n\n  return { routes };\n};\n","import React from \"react\";\nimport \"./Wrapper.scss\";\n\ninterface WrapperProps {\n  children: React.ReactNode;\n}\n\nconst Wrapper = ({ children }: WrapperProps) => {\n  return (\n    <div className=\"container\">\n      <div className=\"content\">{children}</div>\n    </div>\n  );\n};\n\nexport default Wrapper;\n","import { BrowserRouter } from \"react-router-dom\";\nimport Appbar from \"./components/Appbar\";\nimport Footer from \"./components/Footer\";\nimport Router from \"./components/Router/Router\";\nimport Wrapper from \"./components/Wrapper\";\nimport \"./index.css\";\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Appbar />\n      <Wrapper>\n        <Router />\n      </Wrapper>\n      <Footer />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </QueryClientProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}